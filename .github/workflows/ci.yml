name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: symfony_breizhsport_order
          MYSQL_USER: symfony
          MYSQL_PASSWORD: symfony
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      rabbitmq:
        image: rabbitmq:3-management
        env:
          RABBITMQ_DEFAULT_USER: user
          RABBITMQ_DEFAULT_PASS: password
        ports:
          - 5672:5672
          - 15672:15672

    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v3

      - name: 🔧 Fix Git safe directory issue
        run: git config --global --add safe.directory $(pwd)

      - name: 🐘 Installer PHP et extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: pdo_mysql, amqp, sockets
          coverage: none

      - name: ⚙️ Configurer l'environnement
        run: |
          echo "APP_ENV=test" > .env
          echo "APP_SECRET=\$ecretf0rt3st" >> .env
          echo "DATABASE_URL=mysql://symfony:symfony@127.0.0.1:3306/symfony_breizhsport_order?serverVersion=8.0" >> .env
          echo "MESSENGER_TRANSPORT_DSN=amqp://user:password@127.0.0.1:5672/%2f" >> .env
          echo "CORS_ALLOW_ORIGIN=http://localhost:5173" >> .env
          cat .env

      - name: 🔍 Vérifier la connexion MySQL
        run: |
          echo "<?php
          try {
              new PDO('mysql:host=127.0.0.1;port=3306;dbname=symfony_breizhsport_order', 'symfony', 'symfony');
              echo 'Connexion MySQL réussie!\n';
          } catch (PDOException \$e) {
              echo 'Erreur de connexion: ' . \$e->getMessage() . '\n';
              exit(1);
          }
          ?>" > test_db.php
          php test_db.php

      - name: 📦 Installer les dépendances
        run: |
          composer install --prefer-dist --no-progress --no-interaction

      - name: 🗑 Préparer l'environnement et la base de données
        run: |
          rm -rf var/cache/*
          php bin/console cache:warmup --env=test
          php bin/console doctrine:database:drop --force --if-exists --env=test
          php bin/console doctrine:database:create --env=test
          php bin/console doctrine:schema:create --env=test

      - name: ✅ Vérifier la configuration
        run: |
          php bin/console debug:container --env=test --parameter=database_url
          php bin/console debug:env --env=test